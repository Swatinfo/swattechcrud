@extends('layouts.app')

@section('title', '{{modelNamePlural}}')

@section('content')
<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-9 col-12 mb-2">
            <div class="row breadcrumbs-top">
                <div class="col-12">
                    <h2 class="content-header-title float-start mb-0">{{modelNamePlural}}</h2>
                    <div class="breadcrumb-wrapper">
                        {!! $breadcrumbs ?? '' !!}
                    </div>
                </div>
            </div>
        </div>
        <div class="content-header-right text-md-end col-md-3 col-12 d-md-block">
            <div class="mb-1 breadcrumb-right">
                @can('create', \App\Models\{{modelName}}::class)
                <a href="{{ route('{{routeName}}.create') }}" class="btn btn-primary">
                    <i data-feather="plus"></i> New {{modelName}}
                </a>
                @endcan
            </div>
        </div>
    </div>

    <div class="content-body">
        <div class="row">
            <div class="col-12">
                <!-- Filter -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="card-title">Filters</h4>
                        <div>
                            <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false">
                                <i data-feather="filter"></i> Toggle Filters
                            </button>
                        </div>
                    </div>
                    <div class="collapse" id="filterCollapse">
                        <div class="card-body">
                            <form action="{{ route('{{routeName}}.index') }}" method="GET" id="filter-form">
                                <div class="row">
                                    <!-- Search field -->
                                    <div class="col-md-4 mb-1">
                                        <div class="input-group">
                                            <span class="input-group-text" id="basic-addon1"><i data-feather="search"></i></span>
                                            <input type="text" class="form-control" name="search" placeholder="Search {{modelNamePlural}}..." value="{{ request('search') }}">
                                        </div>
                                    </div>
                                    
                                    <!-- Additional filters -->
                                    {!! $filters ?? '' !!}
                                    
                                    <div class="col-12 d-flex justify-content-end mt-2">
                                        <button type="submit" class="btn btn-primary me-1">Apply Filters</button>
                                        <a href="{{ route('{{routeName}}.index') }}" class="btn btn-outline-secondary">Reset</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <!-- /Filter -->

                <!-- Data Table -->
                <div class="card">
                    <div class="card-header border-bottom">
                        <h4 class="card-title">{{modelNamePlural}} List</h4>
                        <div class="dt-action-buttons text-end">
                            <div class="dt-buttons d-inline-flex">
                                <!-- Export buttons -->
                                {!! $exportButtons ?? '' !!}
                                
                                <!-- Refresh button -->
                                <button class="btn btn-outline-secondary btn-sm" onclick="window.location.reload();">
                                    <i data-feather="refresh-cw"></i> Refresh
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Bulk Actions -->
                    {!! $bulkActions ?? '' !!}
                    
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover datatable">
                                <thead>
                                    <tr>
                                        <th>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="select-all">
                                            </div>
                                        </th>
                                        <!-- Column headers -->
                                        {!! $columns !!}
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @forelse($records as $record)
                                    <tr data-id="{{ $record->id }}" class="record-row">
                                        <td>
                                            <div class="form-check">
                                                <input class="form-check-input record-checkbox" type="checkbox" name="selected[]" value="{{ $record->id }}">
                                            </div>
                                        </td>
                                        
                                        <!-- Column data -->
                                        @foreach($visibleColumns as $column)
                                            @if(isset($columnRenderers[$column]))
                                                <td>{!! $columnRenderers[$column]($record) !!}</td>
                                            @else
                                                <td>{{ $record->{$column} }}</td>
                                            @endif
                                        @endforeach
                                        
                                        <td class="text-center">
                                            <div class="d-inline-flex">
                                                <!-- Actions -->
                                                @can('view', $record)
                                                <a href="{{ route('{{routeName}}.show', $record) }}" class="btn btn-sm btn-icon btn-outline-primary me-1" data-bs-toggle="tooltip" title="View">
                                                    <i data-feather="eye"></i>
                                                </a>
                                                @endcan
                                                
                                                @can('update', $record)
                                                <a href="{{ route('{{routeName}}.edit', $record) }}" class="btn btn-sm btn-icon btn-outline-info me-1" data-bs-toggle="tooltip" title="Edit">
                                                    <i data-feather="edit"></i>
                                                </a>
                                                @endcan
                                                
                                                @can('delete', $record)
                                                <button type="button" class="btn btn-sm btn-icon btn-outline-danger" 
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#deleteModal" 
                                                        data-id="{{ $record->id }}"
                                                        data-name="{{ $record->name ?? $record->title ?? $record->id }}"
                                                        title="Delete">
                                                    <i data-feather="trash-2"></i>
                                                </button>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                    <!-- Row Details (Expandable) -->
                                    <tr class="row-details d-none" id="details-{{ $record->id }}">
                                        <td colspan="{{ count($visibleColumns) + 2 }}">
                                            <div class="p-2">
                                                <h5>Details for {{ $record->name ?? $record->title ?? $record->id }}</h5>
                                                <!-- Additional details will be loaded here -->
                                                <div class="record-details-content"></div>
                                            </div>
                                        </td>
                                    </tr>
                                    @empty
                                    <tr>
                                        <td colspan="{{ count($visibleColumns) + 2 }}" class="text-center p-5">
                                            <div class="empty-state">
                                                <img src="{{ asset('images/illustrations/empty.svg') }}" alt="No records found" class="img-fluid" style="max-height: 150px;">
                                                <h5 class="mt-3">No {{modelNamePlural}} Found</h5>
                                                <p class="mb-3">There are no {{modelNamePlural}} matching your search criteria.</p>
                                                @can('create', \App\Models\{{modelName}}::class)
                                                <a href="{{ route('{{routeName}}.create') }}" class="btn btn-primary">
                                                    <i data-feather="plus"></i> Create {{modelName}}
                                                </a>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                    @endforelse
                                </tbody>
                            </table>
                        </div>
                        
                        <!-- Pagination -->
                        {!! $pagination !!}
                    </div>
                </div>
                <!-- /Data Table -->
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete {{modelName}}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this {{modelName}}? This action cannot be undone.</p>
                <p><strong id="delete-record-name"></strong></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="delete-form" method="POST" action="">
                    @csrf
                    @method('DELETE')
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Inline Editing Modal -->
<div class="modal fade" id="inlineEditModal" tabindex="-1" aria-labelledby="inlineEditModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="inlineEditModalLabel">Edit Field</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="inline-edit-form">
                    <div class="mb-3">
                        <label for="field-value" class="form-label">Value</label>
                        <input type="text" class="form-control" id="field-value">
                        <input type="hidden" id="field-name">
                        <input type="hidden" id="record-id">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="save-inline-edit">Save</button>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Delete modal functionality
    const deleteModal = document.getElementById('deleteModal');
    if (deleteModal) {
        deleteModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            
            document.getElementById('delete-record-name').textContent = name;
            document.getElementById('delete-form').action = "{{ route('{{routeName}}.destroy', '') }}/" + id;
        });
    }
    
    // Initialize feather icons
    if (typeof feather !== 'undefined') {
        feather.replace();
    }
    
    // Row expansion functionality
    document.querySelectorAll('.expand-row').forEach(button => {
        button.addEventListener('click', function() {
            const recordId = this.closest('tr').getAttribute('data-id');
            const detailsRow = document.getElementById('details-' + recordId);
            const detailsContent = detailsRow.querySelector('.record-details-content');
            
            if (detailsRow.classList.contains('d-none')) {
                // Show details
                detailsRow.classList.remove('d-none');
                this.innerHTML = '<i data-feather="chevron-up"></i>';
                
                // Load details if empty
                if (detailsContent.innerHTML.trim() === '') {
                    detailsContent.innerHTML = '<div class="spinner-border spinner-border-sm text-primary" role="status"><span class="visually-hidden">Loading...</span></div> Loading details...';
                    
                    // Fetch details via AJAX
                    fetch(`{{ route('{{routeName}}.details', '') }}/${recordId}`)
                        .then(response => response.html())
                        .then(html => {
                            detailsContent.innerHTML = html;
                            feather.replace();
                        })
                        .catch(error => {
                            detailsContent.innerHTML = '<div class="alert alert-danger">Error loading details.</div>';
                        });
                }
            } else {
                // Hide details
                detailsRow.classList.add('d-none');
                this.innerHTML = '<i data-feather="chevron-down"></i>';
            }
            
            feather.replace();
        });
    });
    
    // Inline editing functionality
    document.querySelectorAll('.inline-edit').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const recordId = this.getAttribute('data-id');
            const fieldName = this.getAttribute('data-field');
            const currentValue = this.getAttribute('data-value');
            
            document.getElementById('field-value').value = currentValue;
            document.getElementById('field-name').value = fieldName;
            document.getElementById('record-id').value = recordId;
            
            new bootstrap.Modal(document.getElementById('inlineEditModal')).show();
        });
    });
    
    document.getElementById('save-inline-edit').addEventListener('click', function() {
        const fieldValue = document.getElementById('field-value').value;
        const fieldName = document.getElementById('field-name').value;
        const recordId = document.getElementById('record-id').value;
        
        // Create form data
        const formData = new FormData();
        formData.append('_token', '{{ csrf_token() }}');
        formData.append('_method', 'PATCH');
        formData.append(fieldName, fieldValue);
        
        // Send AJAX request
        fetch(`{{ route('{{routeName}}.update', '') }}/${recordId}`, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update cell content
                const cell = document.querySelector(`tr[data-id="${recordId}"] td[data-field="${fieldName}"]`);
                if (cell) {
                    cell.textContent = fieldValue;
                }
                
                // Close modal
                bootstrap.Modal.getInstance(document.getElementById('inlineEditModal')).hide();
                
                // Show success message
                const toast = new bootstrap.Toast(document.getElementById('success-toast'));
                document.getElementById('success-toast-message').textContent = data.message || 'Record updated successfully';
                toast.show();
            } else {
                // Show error message
                alert(data.message || 'Error updating record');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while updating the record');
        });
    });
    
    // Select all checkbox functionality
    const selectAllCheckbox = document.getElementById('select-all');
    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            document.querySelectorAll('.record-checkbox').forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
            
            // Update bulk actions state
            updateBulkActionsState();
        });
    }
    
    // Individual checkboxes
    document.querySelectorAll('.record-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            updateBulkActionsState();
        });
    });
    
    function updateBulkActionsState() {
        const checkedCount = document.querySelectorAll('.record-checkbox:checked').length;
        const bulkActionButtons = document.querySelectorAll('.bulk-action-btn');
        
        bulkActionButtons.forEach(button => {
            button.disabled = checkedCount === 0;
        });
        
        // Update selected count
        const selectedCountElements = document.querySelectorAll('.selected-count');
        selectedCountElements.forEach(element => {
            element.textContent = checkedCount;
        });
    }
    
    // Initialize bulk actions state
    updateBulkActionsState();
});
</script>
@endpush

@push('styles')
<style>
    /* Responsive styling */
    @media (max-width: 767.98px) {
        .datatable {
            width: 100%;
            overflow-x: auto;
        }
        
        .card-header {
            flex-direction: column;
            align-items: start !important;
        }
        
        .dt-action-buttons {
            margin-top: 1rem;
        }
        
        .content-header-right {
            margin-top: 1rem;
            text-align: left !important;
        }
    }
    
    /* Row expansion styling */
    .row-details {
        background-color: rgba(245, 247, 250, 0.5);
    }
    
    /* Empty state styling */
    .empty-state {
        text-align: center;
        padding: 2rem 0;
    }
    
    /* Inline editable fields */
    .inline-editable {
        cursor: pointer;
        border-bottom: 1px dashed #ccc;
    }
    
    .inline-editable:hover {
        background-color: rgba(245, 247, 250, 0.5);
    }
</style>
@endpush